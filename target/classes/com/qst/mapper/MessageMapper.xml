<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qst.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.qst.pojo.Message" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="business_id" property="businessId" jdbcType="INTEGER" />
    <result column="message_time" property="messageTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qst.pojo.MessageWithBLOBs" extends="BaseResultMap" >
    <result column="message_details" property="messageDetails" jdbcType="LONGVARCHAR" />
    <result column="message_reply" property="messageReply" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    message_id, user_id, business_id, message_time
  </sql>
  <sql id="Blob_Column_List" >
    message_details, message_reply
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qst.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qst.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qst.pojo.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qst.pojo.MessageWithBLOBs" >
    insert into message (message_id, user_id, business_id, 
      message_time, message_details, message_reply
      )
    values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}, 
      #{messageTime,jdbcType=TIMESTAMP}, #{messageDetails,jdbcType=LONGVARCHAR}, #{messageReply,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qst.pojo.MessageWithBLOBs" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="messageTime != null" >
        message_time,
      </if>
      <if test="messageDetails != null" >
        message_details,
      </if>
      <if test="messageReply != null" >
        message_reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null" >
        #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageDetails != null" >
        #{messageDetails,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageReply != null" >
        #{messageReply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qst.pojo.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.messageId != null" >
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null" >
        business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.messageTime != null" >
        message_time = #{record.messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.messageDetails != null" >
        message_details = #{record.messageDetails,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.messageReply != null" >
        message_reply = #{record.messageReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      message_time = #{record.messageTime,jdbcType=TIMESTAMP},
      message_details = #{record.messageDetails,jdbcType=LONGVARCHAR},
      message_reply = #{record.messageReply,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      business_id = #{record.businessId,jdbcType=INTEGER},
      message_time = #{record.messageTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qst.pojo.MessageWithBLOBs" >
    update message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="messageTime != null" >
        message_time = #{messageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageDetails != null" >
        message_details = #{messageDetails,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageReply != null" >
        message_reply = #{messageReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qst.pojo.MessageWithBLOBs" >
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      business_id = #{businessId,jdbcType=INTEGER},
      message_time = #{messageTime,jdbcType=TIMESTAMP},
      message_details = #{messageDetails,jdbcType=LONGVARCHAR},
      message_reply = #{messageReply,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qst.pojo.Message" >
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      business_id = #{businessId,jdbcType=INTEGER},
      message_time = #{messageTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>