<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qst.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.qst.pojo.Orders" >
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_createtime" property="orderCreatetime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="CHAR" />
    <result column="pay_type" property="payType" jdbcType="CHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qst.pojo.OrdersWithBLOBs" extends="BaseResultMap" >
    <result column="order_consignee" property="orderConsignee" jdbcType="VARBINARY" />
    <result column="order_adsress" property="orderAdsress" jdbcType="VARBINARY" />
    <result column="order_phone" property="orderPhone" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, goods_id, user_id, order_createtime, order_status, pay_type, order_amount
  </sql>
  <sql id="Blob_Column_List" >
    order_consignee, order_adsress, order_phone
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qst.pojo.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qst.pojo.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qst.pojo.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qst.pojo.OrdersWithBLOBs" >
    insert into orders (order_id, goods_id, user_id, 
      order_createtime, order_status, pay_type, 
      order_amount, order_consignee, order_adsress, 
      order_phone)
    values (#{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{orderCreatetime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=CHAR}, #{payType,jdbcType=CHAR}, 
      #{orderAmount,jdbcType=INTEGER}, #{orderConsignee,jdbcType=VARBINARY}, #{orderAdsress,jdbcType=VARBINARY}, 
      #{orderPhone,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.qst.pojo.OrdersWithBLOBs" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderCreatetime != null" >
        order_createtime,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="orderConsignee != null" >
        order_consignee,
      </if>
      <if test="orderAdsress != null" >
        order_adsress,
      </if>
      <if test="orderPhone != null" >
        order_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderCreatetime != null" >
        #{orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=CHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=CHAR},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderConsignee != null" >
        #{orderConsignee,jdbcType=VARBINARY},
      </if>
      <if test="orderAdsress != null" >
        #{orderAdsress,jdbcType=VARBINARY},
      </if>
      <if test="orderPhone != null" >
        #{orderPhone,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qst.pojo.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderCreatetime != null" >
        order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=CHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=CHAR},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=INTEGER},
      </if>
      <if test="record.orderConsignee != null" >
        order_consignee = #{record.orderConsignee,jdbcType=VARBINARY},
      </if>
      <if test="record.orderAdsress != null" >
        order_adsress = #{record.orderAdsress,jdbcType=VARBINARY},
      </if>
      <if test="record.orderPhone != null" >
        order_phone = #{record.orderPhone,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=CHAR},
      pay_type = #{record.payType,jdbcType=CHAR},
      order_amount = #{record.orderAmount,jdbcType=INTEGER},
      order_consignee = #{record.orderConsignee,jdbcType=VARBINARY},
      order_adsress = #{record.orderAdsress,jdbcType=VARBINARY},
      order_phone = #{record.orderPhone,jdbcType=VARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=CHAR},
      pay_type = #{record.payType,jdbcType=CHAR},
      order_amount = #{record.orderAmount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>